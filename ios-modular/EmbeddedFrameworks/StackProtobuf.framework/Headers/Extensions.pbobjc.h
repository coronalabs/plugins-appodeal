// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bidmachine/protobuf/extensions.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ADCOMAd_Event;
@class BDMAdExtension_ControlAsset;
@class GPBTimestamp;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum BDMEventTypeExtended

/**
 * Use for tracking events
 * Insert this codes in BM_EVENT_CODE macros in error tracking
 **/
typedef GPB_ENUM(BDMEventTypeExtended) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BDMEventTypeExtended_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BDMEventTypeExtended_EventTypeExtendedInvalid = 0,

  /** Ad lifecycle and interaction events */
  BDMEventTypeExtended_EventTypeExtendedAdLoaded = 500,
  BDMEventTypeExtended_EventTypeExtendedImpression = 501,
  BDMEventTypeExtended_EventTypeExtendedViewable = 502,
  BDMEventTypeExtended_EventTypeExtendedClick = 503,
  BDMEventTypeExtended_EventTypeExtendedClosed = 504,
  BDMEventTypeExtended_EventTypeExtendedAdDestroyed = 505,
  BDMEventTypeExtended_EventTypeExtendedAdExpired = 511,
  BDMEventTypeExtended_EventTypeExtendedContainerAdded = 512,

  /** Session level events */
  BDMEventTypeExtended_EventTypeExtendedSessionInitialized = 506,

  /** Request level events */
  BDMEventTypeExtended_EventTypeExtendedRequestLoaded = 507,
  BDMEventTypeExtended_EventTypeExtendedRequestCanceled = 508,
  BDMEventTypeExtended_EventTypeExtendedRequestExpired = 509,
  BDMEventTypeExtended_EventTypeExtendedRequestDestroyed = 510,

  /**
   *
   * Ad progress trackers
   **/
  BDMEventTypeExtended_EventTypeExtendedStart = 600,
  BDMEventTypeExtended_EventTypeExtendedFirstQuartile = 601,
  BDMEventTypeExtended_EventTypeExtendedMidpoint = 602,
  BDMEventTypeExtended_EventTypeExtendedThirdQuartile = 603,
  BDMEventTypeExtended_EventTypeExtendedComplete = 604,
  BDMEventTypeExtended_EventTypeExtendedMute = 605,
  BDMEventTypeExtended_EventTypeExtendedUnmute = 606,
  BDMEventTypeExtended_EventTypeExtendedSkip = 607,
  BDMEventTypeExtended_EventTypeExtendedPause = 608,
  BDMEventTypeExtended_EventTypeExtendedRewind = 609,
  BDMEventTypeExtended_EventTypeExtendedResume = 610,
  BDMEventTypeExtended_EventTypeExtendedFullscreen = 611,
  BDMEventTypeExtended_EventTypeExtendedExpand = 612,
  BDMEventTypeExtended_EventTypeExtendedCollapse = 613,
  BDMEventTypeExtended_EventTypeExtendedAcceptInvitation = 614,
  BDMEventTypeExtended_EventTypeExtendedClose = 615,
  BDMEventTypeExtended_EventTypeExtendedCreativeView = 616,
  BDMEventTypeExtended_EventTypeExtendedMraidClick = 617,
  BDMEventTypeExtended_EventTypeExtendedMraidOpen = 618,
  BDMEventTypeExtended_EventTypeExtendedMraidLoaded = 619,

  /** Header bidding trackers */
  BDMEventTypeExtended_EventTypeExtendedHbNetworkInitialized = 701,
  BDMEventTypeExtended_EventTypeExtendedHbNetworkPrepared = 702,
  BDMEventTypeExtended_EventTypeExtendedAllHbNetworksPrepared = 703,

  /** Exchange internal trackers */
  BDMEventTypeExtended_EventTypeExtendedBurl = 801,
  BDMEventTypeExtended_EventTypeExtendedNurl = 802,
  BDMEventTypeExtended_EventTypeExtendedLurl = 803,
  BDMEventTypeExtended_EventTypeExtendedCustom = 804,
  BDMEventTypeExtended_EventTypeExtendedCustomLoss = 805,
  BDMEventTypeExtended_EventTypeExtendedCustomWin = 806,

  /** Error tracker */
  BDMEventTypeExtended_EventTypeExtendedError = 1000,
  BDMEventTypeExtended_EventTypeExtendedTrackingError = 1001,
};

GPBEnumDescriptor *BDMEventTypeExtended_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BDMEventTypeExtended_IsValidValue(int32_t value);

#pragma mark - Enum BDMActionType

/**
 * Use for tracking process errors
 * insert this codes in BM_ACTION_CODE macros in error
 **/
typedef GPB_ENUM(BDMActionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BDMActionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BDMActionType_ActionTypeInvalid = 0,

  /** Ad lifecycle */
  BDMActionType_ActionTypeAdLoading = 500,
  BDMActionType_ActionTypeShowing = 501,
  BDMActionType_ActionTypeViewing = 502,
  BDMActionType_ActionTypeClicking = 503,
  BDMActionType_ActionTypeClosing = 504,
  BDMActionType_ActionTypeAdDestroying = 505,
  BDMActionType_ActionTypeSessionInitializing = 506,
  BDMActionType_ActionTypeRequestLoading = 507,
  BDMActionType_ActionTypeRequestCanceling = 508,

  /** Header bidding lifecycle */
  BDMActionType_ActionTypeHbInitializing = 701,
  BDMActionType_ActionTypeHbPreparing = 702,
};

GPBEnumDescriptor *BDMActionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BDMActionType_IsValidValue(int32_t value);

#pragma mark - Enum BDMErrorReason

/**
 * Use for tracking errors of both error types
 * insert this codes in BM_ERROR_REASON macros in error
 **/
typedef GPB_ENUM(BDMErrorReason) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BDMErrorReason_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BDMErrorReason_ErrorReasonInvalid = 0,
  BDMErrorReason_ErrorReasonNoConnection = 100,
  BDMErrorReason_ErrorReasonBadContent = 101,
  BDMErrorReason_ErrorReasonTimeout = 102,
  BDMErrorReason_ErrorReasonNoContent = 103,
  BDMErrorReason_ErrorReasonHandledException = 104,
  BDMErrorReason_ErrorReasonWasClosed = 105,
  BDMErrorReason_ErrorReasonWasDestroyed = 106,
  BDMErrorReason_ErrorReasonWasExpired = 107,
  BDMErrorReason_ErrorReasonWasUsedAlready = 111,
  BDMErrorReason_ErrorReasonInternal = 108,
  BDMErrorReason_ErrorReasonHTTPServerError = 109,
  BDMErrorReason_ErrorReasonHTTPBadRequest = 110,
  BDMErrorReason_ErrorReasonHbNetwork = 200,
};

GPBEnumDescriptor *BDMErrorReason_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BDMErrorReason_IsValidValue(int32_t value);

#pragma mark - Enum BDMHeaderBiddingType

typedef GPB_ENUM(BDMHeaderBiddingType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BDMHeaderBiddingType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BDMHeaderBiddingType_HeaderBiddingTypeInvalid = 0,
  BDMHeaderBiddingType_HeaderBiddingTypeDisabled = -1,
  BDMHeaderBiddingType_HeaderBiddingTypeEnabled = 1,
};

GPBEnumDescriptor *BDMHeaderBiddingType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BDMHeaderBiddingType_IsValidValue(int32_t value);

#pragma mark - Enum BDMAdCacheControl

typedef GPB_ENUM(BDMAdCacheControl) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BDMAdCacheControl_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BDMAdCacheControl_AdCacheControlDisabled = 0,
  BDMAdCacheControl_AdCacheControlEnabled = 1,
};

GPBEnumDescriptor *BDMAdCacheControl_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BDMAdCacheControl_IsValidValue(int32_t value);

#pragma mark - BDMExtensionsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface BDMExtensionsRoot : GPBRootObject
@end

#pragma mark - BDMRequestExtension

typedef GPB_ENUM(BDMRequestExtension_FieldNumber) {
  BDMRequestExtension_FieldNumber_SellerId = 1,
  BDMRequestExtension_FieldNumber_SellerData = 2,
  BDMRequestExtension_FieldNumber_HeaderBiddingType = 3,
  BDMRequestExtension_FieldNumber_Ifv = 4,
  BDMRequestExtension_FieldNumber_BmIfv = 5,
  BDMRequestExtension_FieldNumber_SessionId = 6,
};

GPB_FINAL @interface BDMRequestExtension : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sellerId;

/** Extra data */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *sellerData;
/** The number of items in @c sellerData without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sellerData_Count;

@property(nonatomic, readwrite) BDMHeaderBiddingType headerBiddingType;

/** ID generated by the OS on device for debug and fraud detection */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ifv;

/** ID generated on device for debug and fraud detection */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bmIfv;

/** Session ID - consistent between requests as long as application active (on screen) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;

@end

/**
 * Fetches the raw value of a @c BDMRequestExtension's @c headerBiddingType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t BDMRequestExtension_HeaderBiddingType_RawValue(BDMRequestExtension *message);
/**
 * Sets the raw value of an @c BDMRequestExtension's @c headerBiddingType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetBDMRequestExtension_HeaderBiddingType_RawValue(BDMRequestExtension *message, int32_t value);

#pragma mark - BDMAdExtension

typedef GPB_ENUM(BDMAdExtension_FieldNumber) {
  BDMAdExtension_FieldNumber_Preload = 2,
  BDMAdExtension_FieldNumber_LoadSkipoffset = 3,
  BDMAdExtension_FieldNumber_ViewabilityTimeThreshold = 4,
  BDMAdExtension_FieldNumber_ViewabilityPixelThreshold = 5,
  BDMAdExtension_FieldNumber_ViewabilityDurationThreshold = 6,
  BDMAdExtension_FieldNumber_EventArray = 7,
  BDMAdExtension_FieldNumber_CustomParams = 8,
  BDMAdExtension_FieldNumber_Skipoffset = 9,
  BDMAdExtension_FieldNumber_CompanionSkipoffset = 10,
  BDMAdExtension_FieldNumber_UseNativeClose = 11,
  BDMAdExtension_FieldNumber_R1 = 12,
  BDMAdExtension_FieldNumber_R2 = 13,
  BDMAdExtension_FieldNumber_Countdown = 14,
  BDMAdExtension_FieldNumber_CloseButton = 15,
  BDMAdExtension_FieldNumber_IgnoresSafeAreaLayoutGuide = 16,
  BDMAdExtension_FieldNumber_StoreURL = 17,
  BDMAdExtension_FieldNumber_Progress = 18,
  BDMAdExtension_FieldNumber_ProgressDuration = 19,
  BDMAdExtension_FieldNumber_ViewabilityIgnoreWindowFocus = 20,
  BDMAdExtension_FieldNumber_AdCacheControl = 21,
  BDMAdExtension_FieldNumber_AdCacheMaxAge = 22,
  BDMAdExtension_FieldNumber_R1Delay = 23,
  BDMAdExtension_FieldNumber_AdMarkupLoadingTimeout = 24,
  BDMAdExtension_FieldNumber_UseEmbeddedBrowser = 25,
};

GPB_FINAL @interface BDMAdExtension : GPBMessage

/** Preload ad's markup before rendering with ad framework */
@property(nonatomic, readwrite) BOOL preload GPB_DEPRECATED_MSG("bidmachine.protobuf.AdExtension.preload is deprecated (see bidmachine/protobuf/extensions.proto).");

/** Number of seconds an ad must load before user can close it */
@property(nonatomic, readwrite) uint32_t loadSkipoffset GPB_DEPRECATED_MSG("bidmachine.protobuf.AdExtension.load_skipoffset is deprecated (see bidmachine/protobuf/extensions.proto).");

/** Number of seconds an ad must be displayed before user can close it */
@property(nonatomic, readwrite) uint32_t skipoffset;

/** Number of seconds a companion ad must be displayed before user can close it */
@property(nonatomic, readwrite) uint32_t companionSkipoffset;

/** Enforce native close button and skipoffsets */
@property(nonatomic, readwrite) BOOL useNativeClose;

/** Additional custom features flags */
@property(nonatomic, readwrite) BOOL r1;

@property(nonatomic, readwrite) BOOL r2;

@property(nonatomic, readwrite) uint32_t r1Delay;

/** Countdown view (shows remaining time before close button appears) */
@property(nonatomic, readwrite, strong, null_resettable) BDMAdExtension_ControlAsset *countdown;
/** Test to see if @c countdown has been set. */
@property(nonatomic, readwrite) BOOL hasCountdown;

/** Close button view */
@property(nonatomic, readwrite, strong, null_resettable) BDMAdExtension_ControlAsset *closeButton;
/** Test to see if @c closeButton has been set. */
@property(nonatomic, readwrite) BOOL hasCloseButton;

/** Progress view */
@property(nonatomic, readwrite, strong, null_resettable) BDMAdExtension_ControlAsset *progress;
/** Test to see if @c progress has been set. */
@property(nonatomic, readwrite) BOOL hasProgress;

/** Progress duration */
@property(nonatomic, readwrite) uint32_t progressDuration;

/** Allows the player to place native components outside safe area layout on iOS */
@property(nonatomic, readwrite) BOOL ignoresSafeAreaLayoutGuide;

/** Store url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *storeURL;

/** Minimal time in view for ad to be considered viewable */
@property(nonatomic, readwrite) uint32_t viewabilityTimeThreshold;

/**
 * Minimal percentage of the pixels in view for ad to be considered viewable
 * 0.5 = 50% of pixels
 **/
@property(nonatomic, readwrite) float viewabilityPixelThreshold;

/**
 * Minimal completed duration for video ad to be considered viewable
 * 0.5 = 50% of video duration
 **/
@property(nonatomic, readwrite) float viewabilityDurationThreshold;

/** If true - always track on Android no matter of current window focus */
@property(nonatomic, readwrite) BOOL viewabilityIgnoreWindowFocus;

/** List of custom tracking events */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ADCOMAd_Event*> *eventArray;
/** The number of items in @c eventArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventArray_Count;

/** Map of custom parameters */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *customParams;
/** The number of items in @c customParams without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger customParams_Count;

/** Sets cache policy: enabled/disabled on per ad basis */
@property(nonatomic, readwrite) BDMAdCacheControl adCacheControl;

/** Ad cache TTL in seconds */
@property(nonatomic, readwrite) uint32_t adCacheMaxAge;

/** Ad markup loading timeout in seconds */
@property(nonatomic, readwrite) uint32_t adMarkupLoadingTimeout;

/** Use embedded browser instead of native browser (or store kit) */
@property(nonatomic, readwrite) BOOL useEmbeddedBrowser;

@end

/**
 * Fetches the raw value of a @c BDMAdExtension's @c adCacheControl property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t BDMAdExtension_AdCacheControl_RawValue(BDMAdExtension *message);
/**
 * Sets the raw value of an @c BDMAdExtension's @c adCacheControl property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetBDMAdExtension_AdCacheControl_RawValue(BDMAdExtension *message, int32_t value);

#pragma mark - BDMAdExtension_ControlAsset

typedef GPB_ENUM(BDMAdExtension_ControlAsset_FieldNumber) {
  BDMAdExtension_ControlAsset_FieldNumber_Content = 1,
  BDMAdExtension_ControlAsset_FieldNumber_Fill = 2,
  BDMAdExtension_ControlAsset_FieldNumber_FontStyle = 3,
  BDMAdExtension_ControlAsset_FieldNumber_Height = 4,
  BDMAdExtension_ControlAsset_FieldNumber_Hideafter = 5,
  BDMAdExtension_ControlAsset_FieldNumber_Margin = 6,
  BDMAdExtension_ControlAsset_FieldNumber_Opacity = 7,
  BDMAdExtension_ControlAsset_FieldNumber_Outlined = 8,
  BDMAdExtension_ControlAsset_FieldNumber_Padding = 9,
  BDMAdExtension_ControlAsset_FieldNumber_Shadow = 10,
  BDMAdExtension_ControlAsset_FieldNumber_Stroke = 11,
  BDMAdExtension_ControlAsset_FieldNumber_Style = 13,
  BDMAdExtension_ControlAsset_FieldNumber_Visible = 14,
  BDMAdExtension_ControlAsset_FieldNumber_Width = 15,
  BDMAdExtension_ControlAsset_FieldNumber_X = 16,
  BDMAdExtension_ControlAsset_FieldNumber_Y = 17,
  BDMAdExtension_ControlAsset_FieldNumber_StrokeWidth = 18,
};

GPB_FINAL @interface BDMAdExtension_ControlAsset : GPBMessage

/** Text with the format: "text %1.0f" where the argument is remaining seconds */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** Fill color hex */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fill;

/** Font style (normal - 0, bold - 1, italic - 2, bold_italic - 3) */
@property(nonatomic, readwrite) uint32_t fontStyle;

/** Height in dp */
@property(nonatomic, readwrite) uint32_t height;

/** Interval in seconds after it will be hiden. 0 if element is always on screen */
@property(nonatomic, readwrite) uint32_t hideafter;

/** Element margin in CSS format */
@property(nonatomic, readwrite, copy, null_resettable) NSString *margin;

/** Opacity 0-1 */
@property(nonatomic, readwrite) float opacity;

/** Border */
@property(nonatomic, readwrite) BOOL outlined;

/** Element padding in CSS format */
@property(nonatomic, readwrite, copy, null_resettable) NSString *padding;

/** Shadow color hex */
@property(nonatomic, readwrite, copy, null_resettable) NSString *shadow;

/** Stroke color hex */
@property(nonatomic, readwrite, copy, null_resettable) NSString *stroke;

/** Size which is used for outline or in some case for text size */
@property(nonatomic, readwrite) float strokeWidth;

/** One of element styles */
@property(nonatomic, readwrite, copy, null_resettable) NSString *style;

/** Boolean flag indicates that asset is visible or not */
@property(nonatomic, readwrite) BOOL visible;

/** Width in DP */
@property(nonatomic, readwrite) uint32_t width;

/** The horizontal position */
@property(nonatomic, readwrite, copy, null_resettable) NSString *x;

/** The vertical position */
@property(nonatomic, readwrite, copy, null_resettable) NSString *y;

@end

#pragma mark - BDMAppExtension

typedef GPB_ENUM(BDMAppExtension_FieldNumber) {
  BDMAppExtension_FieldNumber_InstallTime = 1,
  BDMAppExtension_FieldNumber_Uptime = 2,
};

GPB_FINAL @interface BDMAppExtension : GPBMessage

/** Application installation time */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *installTime;
/** Test to see if @c installTime has been set. */
@property(nonatomic, readwrite) BOOL hasInstallTime;

/** Application up time in mills */
@property(nonatomic, readwrite) uint64_t uptime;

@end

#pragma mark - BDMDeviceExtension

typedef GPB_ENUM(BDMDeviceExtension_FieldNumber) {
  BDMDeviceExtension_FieldNumber_Battery = 1,
  BDMDeviceExtension_FieldNumber_Rooted = 2,
};

GPB_FINAL @interface BDMDeviceExtension : GPBMessage

/** Battery level in percent */
@property(nonatomic, readwrite) uint32_t battery;

/** Device root status */
@property(nonatomic, readwrite) BOOL rooted;

@end

#pragma mark - BDMRegsCcpaExtension

typedef GPB_ENUM(BDMRegsCcpaExtension_FieldNumber) {
  BDMRegsCcpaExtension_FieldNumber_UsPrivacy = 1,
};

GPB_FINAL @interface BDMRegsCcpaExtension : GPBMessage

/** CCPA privacy string */
@property(nonatomic, readwrite, copy, null_resettable) NSString *usPrivacy;

@end

#pragma mark - BDMSession

typedef GPB_ENUM(BDMSession_FieldNumber) {
  BDMSession_FieldNumber_Id_p = 1,
  BDMSession_FieldNumber_Uptime = 2,
};

/**
 * Used in Context extension
 **/
GPB_FINAL @interface BDMSession : GPBMessage

/** Session uuid generated on device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** Application session up time in mills */
@property(nonatomic, readwrite) uint64_t uptime;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
